// Generated by CoffeeScript 1.9.1
(function() {
  var startSuggestion, substringMatcher, suggestionTemplate, ta;

  substringMatcher = function(docs) {
    return function(q, cb) {
      var matches, substrRegex;
      matches = void 0;
      substrRegex = void 0;
      matches = [];
      substrRegex = new RegExp(q, 'i');
      $.each(docs, function(i, d) {
        if (substrRegex.test(d.gov_name)) {
          matches.push(d);
          if (matches.length >= 10) {
            return false;
          }
        }
      });
      cb(matches);
    };
  };

  suggestionTemplate = Handlebars.compile("<p><span class=\"minwidth\">{{gov_name}}</span> \n<span class=\"smaller\">{{state}} &nbsp;{{gov_type}}</span>\n</p>");

  ta = void 0;

  startSuggestion = function(govs) {
    var getRecord, link, makeFieldHtml, makeRecordHtml;
    link = function(v) {
      if (('' + v).indexOf('http://') === -1) {
        return v;
      } else {
        return '<a target="_blank" href="' + v + '">' + v + '</a>';
      }
    };
    makeFieldHtml = function(n, v) {
      var s;
      s = '';
      if (v) {
        s = "<p><span class='f-nam'>" + fieldNames[n] + "</span><span class='f-val'>" + (link(v)) + "</span></p>";
      }
      return s;
    };
    makeRecordHtml = function(data) {
      var n, s;
      s = '';
      for (n in data) {
        s += makeFieldHtml(n, data[n]);
      }
      $('#details').html(s);
    };
    $('.typeahead').attr('placeholder', 'GOVERNMENT NAME');
    ta = $('.typeahead').typeahead({
      hint: true,
      highlight: true,
      minLength: 1
    }, {
      name: 'gov_name',
      displayKey: 'gov_name',
      source: substringMatcher(govs),
      templates: {
        suggestion: suggestionTemplate
      }
    });
    getRecord = function(data) {
      var id;
      id = data["inc_id"];
      return $.ajax({
        url: "https://api.mongolab.com/api/1/databases/govwiki/collections/govs/?q={inc_id:" + id + "}&f={_id:0}&l=1&apiKey=0Y5X_Qk2uOJRdHJWJKSRWk6l6JqVTS2y",
        dataType: 'json',
        cache: true,
        success: function(data) {
          if (data.length) {
            makeRecordHtml(data[0]);
          }
        }
      });
    };
    ta.on('typeahead:selected', function(evt, data, name) {
      makeRecordHtml(data);
      getRecord(data);
    });
  };

  $.ajax({
    url: 'js/fieldnames.js',
    dataType: 'script',
    cache: true,
    success: function(data) {
      console.log("field names loaded:" + data);
    }
  });

  $.ajax({
    url: 'data/h_types.json',
    dataType: 'json',
    cache: true,
    success: startSuggestion
  });

}).call(this);

//# sourceMappingURL=b.js.map
